// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SklepUKW2024.DAL;

#nullable disable

namespace SklepUKW2024.Migrations
{
    [DbContext(typeof(FilmsContext))]
    [Migration("20240306170953_Dane")]
    partial class Dane
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SklepUKW2024.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Desc = "Straszne filmy",
                            Name = "Horror"
                        },
                        new
                        {
                            CategoryId = 2,
                            Desc = "Filmy oparte na faktach",
                            Name = "Dokumentalne"
                        },
                        new
                        {
                            CategoryId = 3,
                            Desc = "Dreszczowce",
                            Name = "Thriller"
                        },
                        new
                        {
                            CategoryId = 4,
                            Desc = "Filmy z akcją",
                            Name = "Sensacyjne"
                        },
                        new
                        {
                            CategoryId = 5,
                            Desc = "Elementy magiczne i nadprzyrodzone",
                            Name = "Fantasy"
                        });
                });

            modelBuilder.Entity("SklepUKW2024.Models.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FilmId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            FilmId = 21,
                            CategoryId = 4,
                            Desc = "Zespół specjalistów wkracza w umysł biznesmena, aby zaimplantować tam myśl.",
                            Director = "Christopher Nolan",
                            Title = "Inception"
                        },
                        new
                        {
                            FilmId = 22,
                            CategoryId = 3,
                            Desc = "Kiedy zaginie żona, mąż staje się głównym podejrzanym, ale sytuacja jest bardziej skomplikowana niż się wydaje.",
                            Director = "David Fincher",
                            Title = "Gone Girl"
                        },
                        new
                        {
                            FilmId = 23,
                            CategoryId = 1,
                            Desc = "Kiedy młoda dziewczyna zostaje opętana przez złego ducha, ksiądz próbuje jej pomóc.",
                            Director = "William Friedkin",
                            Title = "The Exorcist"
                        },
                        new
                        {
                            FilmId = 24,
                            CategoryId = 2,
                            Desc = "Dokumentalny opis życia pingwinów cesarskich w Antarktyce.",
                            Director = "Luc Jacquet",
                            Title = "March of the Penguins"
                        },
                        new
                        {
                            FilmId = 25,
                            CategoryId = 5,
                            Desc = "Młody hobbit wyrusza w podróż, aby zniszczyć pierścień, który może zniszczyć świat.",
                            Director = "Peter Jackson",
                            Title = "The Lord of the Rings: The Fellowship of the Ring"
                        },
                        new
                        {
                            FilmId = 26,
                            CategoryId = 3,
                            Desc = "Dwóch detektywów tropi seryjnego mordercę, który działa według siedmiu grzechów głównych.",
                            Director = "David Fincher",
                            Title = "Se7en"
                        },
                        new
                        {
                            FilmId = 27,
                            CategoryId = 4,
                            Desc = "Policyjny porucznik staje w obronie budynku, który został przejęty przez terrorystów.",
                            Director = "John McTiernan",
                            Title = "Die Hard"
                        },
                        new
                        {
                            FilmId = 28,
                            CategoryId = 1,
                            Desc = "Grupa nastolatków odkrywa, że śmiercionośny morderca grasuje we śniech.",
                            Director = "Wes Craven",
                            Title = "A Nightmare on Elm Street"
                        },
                        new
                        {
                            FilmId = 29,
                            CategoryId = 2,
                            Desc = "Kontrowersyjny dokument o światach orków i ich warunkach życia w niewoli.",
                            Director = "Gabriela Cowperthwaite",
                            Title = "Blackfish"
                        },
                        new
                        {
                            FilmId = 30,
                            CategoryId = 5,
                            Desc = "W Hiszpanii podczas wojny domowej dziewczynka odkrywa magiczny labirynt w lesie.",
                            Director = "Guillermo del Toro",
                            Title = "Pan's Labyrinth"
                        },
                        new
                        {
                            FilmId = 1,
                            CategoryId = 1,
                            Desc = "Rodzina zamieszkuje opuszczony hotel, gdzie ojciec zaczyna stopniowo tracić zmysły.",
                            Director = "Stanley Kubrick",
                            Title = "The Shining"
                        },
                        new
                        {
                            FilmId = 2,
                            CategoryId = 1,
                            Desc = "Kobieta trafia do odległego motelu, gdzie właściciel ma mroczne sekrety.",
                            Director = "Alfred Hitchcock",
                            Title = "Psycho"
                        },
                        new
                        {
                            FilmId = 3,
                            CategoryId = 2,
                            Desc = "Seria dokumentalna przedstawiająca niesamowite zjawiska przyrody na całym świecie.",
                            Director = "David Attenborough",
                            Title = "Planet Earth II"
                        },
                        new
                        {
                            FilmId = 20,
                            CategoryId = 5,
                            Desc = "Młody czarodziej Harry Potter odkrywa swoje magiczne dziedzictwo, gdy zostaje zaproszony do Hogwartu.",
                            Director = "Chris Columbus",
                            Title = "Harry Potter and the Philosopher's Stone"
                        });
                });

            modelBuilder.Entity("SklepUKW2024.Models.Film", b =>
                {
                    b.HasOne("SklepUKW2024.Models.Category", "Category")
                        .WithMany("Films")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SklepUKW2024.Models.Category", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
